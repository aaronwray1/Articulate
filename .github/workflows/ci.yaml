name: build-and-push

on:
  push:
    branches:
      - 'master'
      - 'issue-11-githubactions'
      - 'issue-13-xunit-tests'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Tests
        run: |
          dotnet test --collect:"XPlat Code Coverage" ./tests
      - name: Generate Test Report
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.8.10
          reportgenerator "-reports:./tests/TestResults/**/coverage.cobertura.xml" "-targetdir:coveragereport" -reporttypes:html

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Articulate App Build/Push Image
        uses: docker/build-push-action@v2
        with:
          context: ./app
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/articulate-app:latest
      - name: Articulate Build/Push Image
        uses: docker/build-push-action@v2
        with:
          context: ./articulate
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/articulate:latest
      - name: Categories Build/Push Image
        run: |
          docker build -f ./categories/dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/categories:latest ./categories
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/categories:latest
      - name: Numbers Build/Push Image
        uses: docker/build-push-action@v2
        with:
          context: ./numbers
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/numbers:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Docker Compose Installation
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
    - name: Change Docker Context
      run: | 
        docker context create my-context --docker "host=ssh://azureuser@articulateawray.eastus.cloudapp.azure.com"
        docker context use my-context
    - name: Test SSH
      run: | 
        ssh -o StrictHostKeyChecking=no azureuser@articulateawray.eastus.cloudapp.azure.com echo "Hello! World!"
    - name: Deploy Containers
      run: | 
        docker-compose pull
        docker-compose --env-file ./config/.prod.env up -d